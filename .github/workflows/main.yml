---
name: Build

on:
  push:
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build app and run tests
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_NAME: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3

      - id: install-python
        name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pipenv

      - id: install-pipenv
        name: Install pipenv
        run: |
          python -m pip install --upgrade --no-cache-dir pip
          python -m pip install --no-cache-dir pipenv

      - id: install-python-dependencies
        name: Install python dependencies
        run: |
          cd backend
          pipenv sync --dev --python ${{ steps.install-python.outputs.python-version }}

      - id: test-tox
        name: Test with tox
        run: |
          python -m pip install tox tox-gh-actions
          tox

      - id: generate-coverage
        name: Generage coverage report
        run: |
          cd backend
          pipenv run pytest -n auto --cov --cov-config=../pyproject.toml --cov-branch

      - id: store-coverage-report
        name: Store coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: backend/.coverage

      - id: coverage-comment
        name: Coverage comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v3
        if: steps.coverage-comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt

      - id: install-node
        name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - id: run-npm
        name: Run npm ci, build and test
        run: |
          cd frontend
          npm ci
          npm run build --if-present
          npm test
